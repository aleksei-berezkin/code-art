.main {
    /* We can't use vh in mobile browsers because it may result in vertical scroll */
    /* So we introduce like 'container-height' properties */
    --main-h: 100%;
    --main-w: 100%;
    --main-tx: 250ms;

    display: flex;
    height: 100%;
    margin: 0;
    padding: 0;
    width: 100%;
}

.main > .alphabet-canvas, .main > .attribution-canvas, .main > .self-attr-canvas {
    left: 0;
    position: fixed;
    transform: translateY(-150%);
    top: 0;
}

.main > .code-canvas {
    --s: 1;
    --outline-h: calc(var(--main-h) * var(--s));
    --outline-w: calc(var(--main-w) * var(--s));

    position: absolute;
    transition: opacity var(--main-tx);
}

.main > .code-canvas.fit {
    height: var(--outline-h);
    left: calc(50% - calc(var(--outline-w) * .5));
    top: calc(50% - calc(var(--outline-h) * .5));
    width: var(--outline-w);
}

.main > .code-canvas.aspect {
    --a: calc(var(--outline-w) / var(--outline-h));
    --height: calc(min(var(--outline-h), var(--outline-w) / var(--a)));
    --width: calc(min(var(--outline-w), var(--outline-h) * var(--a)));

    height: var(--height);
    left: calc(50% - calc(var(--width) * .5));
    top: calc(50% - calc(var(--height) * .5));
    width: var(--width);
}

.main > .progress-svg {
    --s: calc(min(120px, 200px + 15vw));

    height: var(--s);
    left: calc(50vw - var(--s) * .5);
    position: absolute;
    top: calc(50vh - var(--s) * .5);
    stroke: #fff8;
    width: var(--s);
    transition: opacity var(--main-tx);
}

.main .progress-circle {
    animation: arc-anim 1.4s ease-in-out infinite, rotation-anim 1.4s linear infinite;
    filter: drop-shadow(0 0 calc(min(1px + .1vw, 2px)) #fff9);
    box-shadow: var(--btn-shadow);
}

/*
 * l = 2 * pi * 20 = 125.66
 */
@keyframes arc-anim {
    0% {
        stroke-dashoffset: 0;
        stroke-dasharray: .7, 125;
    }
    50% {
        stroke-dashoffset: -12;
        stroke-dasharray: 101, 125;
    }
    100% {
        stroke-dashoffset: -125;
        stroke-dasharray: .7, 125;
    }
}

@keyframes rotation-anim {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.main > .round-btn {
    --btn-shadow-color: rgb(60 64 67 / 55%);

    background: var(--menu-bg-color);
    backdrop-filter: var(--menu-backdrop-filter);
    border-radius: 50%;
    box-shadow: 3px 0 6px 0px var(--btn-shadow-color), -1px 4px 8px 1px var(--btn-shadow-color);
    color: #000d;
    height: var(--btn-size);
    overflow: hidden;
    position: absolute;
    transition: background-color var(--main-tx), box-shadow var(--main-tx), color var(--main-tx), transform var(--main-tx);
    top: var(--pad-std);
    width: var(--btn-size);
}

.main > .round-btn.left {
    left: var(--pad-std);
}

.main > .round-btn.second-to-right {
    right: calc(var(--pad-std) * 2 + var(--btn-size));
}

.main > .round-btn.right {
    right: var(--pad-std);
}

.main > .round-btn:hover {
    --btn-shadow-color: rgb(160 164 167 / 55%);

    background: #ffffffe0;
    color: #000;
}

.main > .round-btn:active {
    --btn-shadow-color: rgb(180 184 187 / 55%);

    background: #fff;
    color: #000;
}

.main > .round-btn > .menu-btn-wrapper {
    align-items: center;
    height: 100%;
    display: flex;
    justify-content: center;
    left: 0;
    position: absolute;
    top: 0;
    transition: opacity var(--main-tx), transform var(--main-tx);
    width: 100%;
}

.main > .round-btn > .menu-btn-wrapper.hidden {
    opacity: 0;
    transform: scale(.25);
}

.main > .round-btn > .generate-icon-wrapper {
    align-items: center;
    display: flex;
    justify-content: center;
    transition: transform var(--main-tx);
}

.main > .round-btn > .download-slider {
    align-items: center;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    height: 200%;
    justify-content: space-around;
    position: absolute;
    width: 100%;
}
